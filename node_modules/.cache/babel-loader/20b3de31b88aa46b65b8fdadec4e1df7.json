{"ast":null,"code":"import _classCallCheck from\"/data/Git/React/e-cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/data/Git/React/e-cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/data/Git/React/e-cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/data/Git/React/e-cv/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Grid from'@material-ui/core/Grid';import Card from'react-bootstrap/Card';import Typography from'@material-ui/core/Typography';import ArrowRightRoundedIcon from'@material-ui/icons/ArrowRightRounded';import Styles from'../../Styles/ULView/';var ULView=/*#__PURE__*/function(_React$Component){_inherits(ULView,_React$Component);var _super=_createSuper(ULView);function ULView(){_classCallCheck(this,ULView);return _super.apply(this,arguments);}_createClass(ULView,[{key:\"render\",value:function render(){var _this$props=this.props,data=_this$props.data,lng=_this$props.lng,lngTranslations=_this$props.lngTranslations;var Translations=lngTranslations['ULView'];var Inner=data.data.map(function(sUL,idx){var mainContent,remarksContent,ret=/*#__PURE__*/React.createElement(React.Fragment,{key:idx}),content=sUL.content;if(\"all\"in content.main){mainContent=content.main.all;}if(\"all\"in content.remarks){remarksContent=content.remarks.all;}if(lng in content.main){mainContent=content.main[lng];}if(lng in content.remarks){remarksContent=content.remarks[lng];}if(mainContent){ret=/*#__PURE__*/React.createElement(ULTypography,{key:idx,txtMain:mainContent,txtRemarks:remarksContent});}return ret;});return/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"center\",style:Styles.mainRow},/*#__PURE__*/React.createElement(Grid,{item:true,xs:true,sm:true,md:true,lg:true},/*#__PURE__*/React.createElement(Card,{bg:\"light\",key:\"1\",text:\"dark\"},/*#__PURE__*/React.createElement(Card.Header,{style:Styles.cardHeader},Translations[data.title]),/*#__PURE__*/React.createElement(Card.Body,{style:Styles.cardBody},Inner))));}}]);return ULView;}(React.Component);export{ULView as default};var ULTypography=function ULTypography(props){return/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,sm:12,md:10,lg:8},/*#__PURE__*/React.createElement(Typography,{variant:\"h5\",color:\"primary\",style:Styles.ulTypography1},/*#__PURE__*/React.createElement(ArrowRightRoundedIcon,null),props.txtMain),/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",color:\"textSecondary\",style:Styles.ulTypography2},props.txtRemarks)));};","map":{"version":3,"sources":["/data/Git/React/e-cv/src/Components/ULView/index.js"],"names":["React","Grid","Card","Typography","ArrowRightRoundedIcon","Styles","ULView","props","data","lng","lngTranslations","Translations","Inner","map","sUL","idx","mainContent","remarksContent","ret","content","main","all","remarks","mainRow","cardHeader","title","cardBody","Component","ULTypography","ulTypography1","txtMain","ulTypography2","txtRemarks"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from 'react-bootstrap/Card';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowRightRoundedIcon from '@material-ui/icons/ArrowRightRounded';\nimport Styles from '../../Styles/ULView/';\n\nexport default class ULView extends React.Component {\n\n    render() {\n        const { data, lng, lngTranslations } = this.props;\n        const Translations = lngTranslations['ULView'];\n        const Inner = data.data.map((sUL, idx) => {\n            let mainContent, remarksContent, ret = (<React.Fragment key={idx} />), { content } = sUL;\n            if (\"all\" in content.main) {\n                mainContent = content.main.all;\n            }\n            if (\"all\" in content.remarks) {\n                remarksContent = content.remarks.all;\n            }\n            if (lng in content.main) {\n                mainContent = content.main[lng];\n            }\n            if (lng in content.remarks) {\n                remarksContent = content.remarks[lng];\n            }\n            if (mainContent) {\n                ret = (\n                    <ULTypography\n                        key={idx}\n                        txtMain={mainContent}\n                        txtRemarks={remarksContent}\n                    />\n                );\n            }\n            return ret;\n        })\n        return (\n            <Grid\n                container\n                justify=\"center\"\n                style={Styles.mainRow}\n            >\n                <Grid\n                    item xs sm md lg\n                >\n                    <Card\n                        bg=\"light\"\n                        key=\"1\"\n                        text=\"dark\"\n                    >\n                        <Card.Header style={Styles.cardHeader}>\n                            {Translations[data.title]}\n                        </Card.Header>\n                        <Card.Body style={Styles.cardBody}>\n                            {Inner}\n                        </Card.Body>\n                    </Card>\n                </Grid>\n            </Grid>\n        )\n    }\n\n}\n\nconst ULTypography = (props) => {\n    return (\n        <Grid\n            container\n            justify=\"center\"\n        >\n            <Grid\n                item\n                xs={12}\n                sm={12}\n                md={10}\n                lg={8}\n            >\n                <Typography\n                    variant=\"h5\"\n                    color=\"primary\" style={Styles.ulTypography1}\n                >\n                    <ArrowRightRoundedIcon />\n                    {props.txtMain}\n                </Typography>\n                <Typography\n                    variant=\"subtitle1\"\n                    color=\"textSecondary\"\n                    style={Styles.ulTypography2}\n                >\n                    {props.txtRemarks}\n                </Typography>\n            </Grid>\n        </Grid>\n    )\n}"]},"metadata":{},"sourceType":"module"}