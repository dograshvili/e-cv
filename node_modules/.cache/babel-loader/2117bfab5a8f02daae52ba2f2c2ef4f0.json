{"ast":null,"code":"var _jsxFileName = \"/data/Git/React/e-cv/src/Components/LanguageSelector/index.js\";\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport el from '../../Languages/el.json';\nimport en from '../../Languages/en.json';\nimport ka from '../../Languages/ka.json';\nimport Styles from '../../Styles/LanguageSelector/';\nexport default class LanguageSelector extends React.Component {\n  render() {\n    const {\n      lng,\n      updateAppState,\n      lngTranslations\n    } = this.props;\n    const Translations = lngTranslations[this.constructor.name];\n    return /*#__PURE__*/React.createElement(Row, {\n      style: Styles.mainRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 8,\n      sm: 8,\n      md: 8,\n      lg: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, \"asdf\"), /*#__PURE__*/React.createElement(Col, {\n      xs: 4,\n      sm: 4,\n      md: 4,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      size: \"sm\",\n      onSelect: lngNew => {\n        if (lngNew !== lng) {\n          if (lngNew === \"en\") {\n            updateAppState({\n              lng: lngNew,\n              lngTranslations: en\n            });\n          } else if (lngNew === \"ka\") {\n            updateAppState({\n              lng: lngNew,\n              lngTranslations: ka\n            });\n          } else {\n            updateAppState({\n              lng: \"el\",\n              lngTranslations: el\n            });\n          }\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"secondary\",\n      id: \"language_select\",\n      ref: ref => this.lngSelectRef = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, Translations.dropdown_choose_language), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      active: lng === \"el\",\n      eventKey: \"el\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, Translations.dropdown_choose_language_el), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      active: lng === \"en\",\n      eventKey: \"en\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, Translations.dropdown_choose_language_en), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      active: lng === \"ka\",\n      eventKey: \"ka\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, Translations.dropdown_choose_language_ka)))));\n  }\n\n}","map":{"version":3,"sources":["/data/Git/React/e-cv/src/Components/LanguageSelector/index.js"],"names":["React","Row","Col","Dropdown","el","en","ka","Styles","LanguageSelector","Component","render","lng","updateAppState","lngTranslations","props","Translations","constructor","name","mainRow","lngNew","ref","lngSelectRef","dropdown_choose_language","dropdown_choose_language_el","dropdown_choose_language_en","dropdown_choose_language_ka"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport el from '../../Languages/el.json';\nimport en from '../../Languages/en.json';\nimport ka from '../../Languages/ka.json';\nimport Styles from '../../Styles/LanguageSelector/';\n\nexport default class LanguageSelector extends React.Component {\n\n    render() {\n        const { lng, updateAppState, lngTranslations } = this.props;\n        const Translations = lngTranslations[this.constructor.name];\n        return(\n            <Row\n                style={Styles.mainRow}\n            >\n                <Col xs={8} sm={8} md={8} lg={8}>asdf\n                </Col>\n                <Col\n                    xs={4} sm={4} md={4} lg={4}\n                >\n                    <Dropdown\n                        size=\"sm\"\n                        onSelect={lngNew => {\n                            if (lngNew !== lng) {\n                                if (lngNew === \"en\") {\n                                    updateAppState({\n                                        lng: lngNew,\n                                        lngTranslations: en\n                                    });\n                                } else if (lngNew === \"ka\") {\n                                    updateAppState({\n                                        lng: lngNew,\n                                        lngTranslations: ka\n                                    });\n                                } else {\n                                    updateAppState({\n                                        lng: \"el\",\n                                        lngTranslations: el\n                                    });\n                                }\n                            }\n                        }}\n                    >\n                        <Dropdown.Toggle\n                            variant=\"secondary\"\n                            id=\"language_select\"\n                            ref={ref => this.lngSelectRef = ref}\n                        >\n                            {Translations.dropdown_choose_language}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item\n                                active={lng === \"el\"}\n                                eventKey=\"el\"\n                            >\n                                {Translations.dropdown_choose_language_el}\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                                active={lng === \"en\"}\n                                eventKey=\"en\"\n                            >\n                                {Translations.dropdown_choose_language_en}\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                                active={lng === \"ka\"}\n                                eventKey=\"ka\"\n                            >\n                                {Translations.dropdown_choose_language_ka}\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Col>\n            </Row>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}