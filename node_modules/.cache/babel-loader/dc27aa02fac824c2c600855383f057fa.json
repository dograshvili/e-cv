{"ast":null,"code":"var _jsxFileName = \"/data/Git/React/e-cv/src/Components/App/index.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Styles from '../../Styles/App';\nimport data from '../../Resources/CVData/data.json';\nimport en from '../../Languages/en.json';\nimport LanguageSelector from '../../Components/LanguageSelector';\nimport PersonInfo from '../../Components/PersonInfo';\nimport TimelineView from '../TimelineView';\nimport ULView from '../../Components/ULView';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.changeBackgroundImage();\n    };\n\n    this.changeBackgroundImage = () => {\n      const current = this.state.currentBackgroundImage;\n      let next;\n\n      if (current === 5) {\n        next = 1;\n      } else {\n        next = current + 1;\n      }\n\n      setTimeout(() => {\n        this.updateState({\n          currentBackgroundImage: next,\n          backgroundImage: `url(/assets/images/b_img_${next}.jpg) no-repeat center center fixed`\n        });\n      }, this.state.backgroundImageTime);\n    };\n\n    this.updateState = state => this.setState(state);\n\n    this.state = {\n      lng: \"en\",\n      lngTranslations: en,\n      currentBackgroundImage: 1,\n      backgroundImage: \"url(/assets/images/b_img_1.jpg) no-repeat center center fixed\",\n      backgroundImageTime: 1000\n    };\n  }\n\n  render() {\n    const {\n      lng,\n      lngTranslations\n    } = this.state;\n    const Inner = data.cv_info.map((info, idx) => {\n      if (info.type === \"timeline\") {\n        return /*#__PURE__*/React.createElement(TimelineView, {\n          key: idx,\n          data: info,\n          lng: lng,\n          lngTranslations: lngTranslations,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }\n        });\n      } else if (info.type === \"ul\") {\n        return /*#__PURE__*/React.createElement(ULView, {\n          key: idx,\n          data: info,\n          lng: lng,\n          lngTranslations: lngTranslations,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, null);\n      }\n    });\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      style: {\n        background: this.state.backgroundImage,\n        backgroundSize: \"cover\",\n        height: \"100%\",\n        overflow: \"hidden\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 6,\n      lg: 8,\n      style: Styles.mainContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LanguageSelector, {\n      updateAppState: this.updateState,\n      lng: lng,\n      lngTranslations: lngTranslations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(PersonInfo, {\n      data: data.person_info,\n      lngTranslations: lngTranslations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }), Inner));\n  }\n\n}","map":{"version":3,"sources":["/data/Git/React/e-cv/src/Components/App/index.js"],"names":["React","Grid","Styles","data","en","LanguageSelector","PersonInfo","TimelineView","ULView","App","Component","constructor","props","componentDidMount","changeBackgroundImage","current","state","currentBackgroundImage","next","setTimeout","updateState","backgroundImage","backgroundImageTime","setState","lng","lngTranslations","render","Inner","cv_info","map","info","idx","type","background","backgroundSize","height","overflow","mainContainer","person_info"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,EAAP,MAAe,yBAAf;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,eAAe,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAE7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,iBAZmB,GAYC,MAAM;AACtB,WAAKC,qBAAL;AACH,KAdkB;;AAAA,SAgBnBA,qBAhBmB,GAgBK,MAAM;AAC1B,YAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,sBAA3B;AACA,UAAIC,IAAJ;;AACA,UAAIH,OAAO,KAAK,CAAhB,EAAmB;AACfG,QAAAA,IAAI,GAAG,CAAP;AACH,OAFD,MAEO;AACHA,QAAAA,IAAI,GAAIH,OAAO,GAAG,CAAlB;AACH;;AACDI,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKC,WAAL,CAAiB;AACbH,UAAAA,sBAAsB,EAAEC,IADX;AAEbG,UAAAA,eAAe,EAAG,4BAA2BH,IAAK;AAFrC,SAAjB;AAIH,OALS,EAKP,KAAKF,KAAL,CAAWM,mBALJ,CAAV;AAMH,KA9BkB;;AAAA,SAgCnBF,WAhCmB,GAgCLJ,KAAK,IAAI,KAAKO,QAAL,CAAcP,KAAd,CAhCJ;;AAGf,SAAKA,KAAL,GAAa;AACTQ,MAAAA,GAAG,EAAE,IADI;AAETC,MAAAA,eAAe,EAAErB,EAFR;AAGTa,MAAAA,sBAAsB,EAAE,CAHf;AAITI,MAAAA,eAAe,EAAE,+DAJR;AAKTC,MAAAA,mBAAmB,EAAE;AALZ,KAAb;AAOH;;AAwBDI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAA2B,KAAKT,KAAtC;AACA,UAAMW,KAAK,GAAIxB,IAAI,CAACyB,OAAL,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC3C,UAAID,IAAI,CAACE,IAAL,KAAc,UAAlB,EAA8B;AAC1B,4BACI,oBAAC,YAAD;AACI,UAAA,GAAG,EAAED,GADT;AAEI,UAAA,IAAI,EAAED,IAFV;AAGI,UAAA,GAAG,EAAEN,GAHT;AAII,UAAA,eAAe,EAAEC,eAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,OATD,MASO,IAAIK,IAAI,CAACE,IAAL,KAAc,IAAlB,EAAwB;AAC3B,4BACI,oBAAC,MAAD;AACI,UAAA,GAAG,EAAED,GADT;AAEI,UAAA,IAAI,EAAED,IAFV;AAGI,UAAA,GAAG,EAAEN,GAHT;AAII,UAAA,eAAe,EAAEC,eAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,OATM,MASA;AACH,4BAAQ,yCAAR;AACH;AACJ,KAtBc,CAAf;AAuBA,wBACI,oBAAC,IAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,OAAO,EAAC,QAFZ;AAGI,MAAA,KAAK,EAAE;AACHQ,QAAAA,UAAU,EAAE,KAAKjB,KAAL,CAAWK,eADpB;AAEHa,QAAAA,cAAc,EAAE,OAFb;AAGHC,QAAAA,MAAM,EAAE,MAHL;AAIHC,QAAAA,QAAQ,EAAE;AAJP,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI,oBAAC,IAAD;AACI,MAAA,IAAI,MADR;AACS,MAAA,EAAE,EAAE,EADb;AAEI,MAAA,EAAE,EAAE,EAFR;AAGI,MAAA,EAAE,EAAE,CAHR;AAII,MAAA,EAAE,EAAE,CAJR;AAKI,MAAA,KAAK,EAAElC,MAAM,CAACmC,aALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,gBAAD;AACI,MAAA,cAAc,EAAE,KAAKjB,WADzB;AAEI,MAAA,GAAG,EAAEI,GAFT;AAGI,MAAA,eAAe,EAAEC,eAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,eAYI,oBAAC,UAAD;AACI,MAAA,IAAI,EAAEtB,IAAI,CAACmC,WADf;AAEI,MAAA,eAAe,EAAEb,eAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAgBKE,KAhBL,CAVJ,CADJ;AA+BH;;AA5F4C","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Styles from '../../Styles/App';\nimport data from '../../Resources/CVData/data.json';\nimport en from '../../Languages/en.json';\nimport LanguageSelector from '../../Components/LanguageSelector';\nimport PersonInfo from '../../Components/PersonInfo';\nimport TimelineView from '../TimelineView';\nimport ULView from '../../Components/ULView';\n\nexport default class App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lng: \"en\",\n            lngTranslations: en,\n            currentBackgroundImage: 1,\n            backgroundImage: \"url(/assets/images/b_img_1.jpg) no-repeat center center fixed\",\n            backgroundImageTime: 1000\n        }\n    }\n\n    componentDidMount = () => {\n        this.changeBackgroundImage();\n    }\n\n    changeBackgroundImage = () => {\n        const current = this.state.currentBackgroundImage;\n        let next;\n        if (current === 5) {\n            next = 1;\n        } else {\n            next = (current + 1);\n        }\n        setTimeout(() => {\n            this.updateState({\n                currentBackgroundImage: next,\n                backgroundImage: `url(/assets/images/b_img_${next}.jpg) no-repeat center center fixed`\n            });\n        }, this.state.backgroundImageTime);\n    }\n\n    updateState = state => this.setState(state);\n\n    render() {\n        const { lng, lngTranslations } = this.state;\n        const Inner  = data.cv_info.map((info, idx) => {\n            if (info.type === \"timeline\") {\n                return (\n                    <TimelineView\n                        key={idx}\n                        data={info}\n                        lng={lng}\n                        lngTranslations={lngTranslations}\n                    />\n                )\n            } else if (info.type === \"ul\") {\n                return (\n                    <ULView\n                        key={idx}\n                        data={info}\n                        lng={lng}\n                        lngTranslations={lngTranslations}\n                    />\n                )\n            } else {\n                return (<></>)\n            }\n        });\n        return(\n            <Grid\n                container\n                justify=\"center\"\n                style={{\n                    background: this.state.backgroundImage,\n                    backgroundSize: \"cover\",\n                    height: \"100%\",\n                    overflow: \"hidden\"\n                }}\n            >\n                <Grid\n                    item xs={12}\n                    sm={12}\n                    md={6}\n                    lg={8}\n                    style={Styles.mainContainer}\n                >\n                    <LanguageSelector\n                        updateAppState={this.updateState}\n                        lng={lng}\n                        lngTranslations={lngTranslations}\n                    />\n                    <PersonInfo\n                        data={data.person_info}\n                        lngTranslations={lngTranslations}\n                    />\n                    {Inner}\n                </Grid>\n            </Grid>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}