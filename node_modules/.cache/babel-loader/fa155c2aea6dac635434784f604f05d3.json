{"ast":null,"code":"var _jsxFileName = \"/data/Git/React/e-cv/src/Components/TimelineView/index.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from 'react-bootstrap/Card';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport SchoolOutlinedIcon from '@material-ui/icons/SchoolOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Moment from 'moment';\nimport Styles from '../../Styles/TimelineView';\nexport default class TimelineView extends React.Component {\n  render() {\n    const {\n      data,\n      lng,\n      lngTranslations\n    } = this.props;\n    const Translations = lngTranslations[this.constructor.name];\n    const Inner = data.data.map((sTimeline, idx) => {\n      return /*#__PURE__*/React.createElement(Timeline, {\n        key: idx,\n        align: \"alternate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TimelineItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MyTimelineOppositeContent, {\n        txt: sTimeline.date.replace(/{_UNTIL_NOW_YEAR_TRANS_}/g, Moment(new Date()).format('Y')),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(MyTimelineSeparator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(MyTimelineContent, {\n        txt: sTimeline.content[lng],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      })));\n    });\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      style: Styles.mainRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      sm: true,\n      md: true,\n      lg: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      bg: \"light\",\n      key: \"1\",\n      text: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: Styles.cardHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, Translations[data.title]), /*#__PURE__*/React.createElement(Card.Body, {\n      style: Styles.cardBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, Inner))));\n  }\n\n}\n\nconst MyTimelineOppositeContent = props => {\n  return /*#__PURE__*/React.createElement(TimelineOppositeContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, props.txt));\n};\n\nconst MyTimelineContent = props => {\n  return /*#__PURE__*/React.createElement(TimelineContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    style: Styles.timelineContentPaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, props.txt)));\n};\n\nconst MyTimelineSeparator = props => {\n  return /*#__PURE__*/React.createElement(TimelineSeparator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TimelineDot, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SchoolOutlinedIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TimelineConnector, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/data/Git/React/e-cv/src/Components/TimelineView/index.js"],"names":["React","Grid","Card","Timeline","TimelineItem","TimelineSeparator","TimelineConnector","TimelineContent","TimelineOppositeContent","TimelineDot","SchoolOutlinedIcon","Paper","Typography","Moment","Styles","TimelineView","Component","render","data","lng","lngTranslations","props","Translations","constructor","name","Inner","map","sTimeline","idx","date","replace","Date","format","content","mainRow","cardHeader","title","cardBody","MyTimelineOppositeContent","txt","MyTimelineContent","timelineContentPaper","MyTimelineSeparator"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,uBAAP,MAAoC,0CAApC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,eAAe,MAAMC,YAAN,SAA2Bf,KAAK,CAACgB,SAAjC,CAA2C;AAEtDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA;AAAb,QAAiC,KAAKC,KAA5C;AACA,UAAMC,YAAY,GAAGF,eAAe,CAAC,KAAKG,WAAL,CAAiBC,IAAlB,CAApC;AACA,UAAMC,KAAK,GAAGP,IAAI,CAACA,IAAL,CAAUQ,GAAV,CAAc,CAACC,SAAD,EAAYC,GAAZ,KAAoB;AAC5C,0BACI,oBAAC,QAAD;AACI,QAAA,GAAG,EAAEA,GADT;AAEI,QAAA,KAAK,EAAC,WAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,yBAAD;AACI,QAAA,GAAG,EAAED,SAAS,CAACE,IAAV,CAAeC,OAAf,CAAuB,2BAAvB,EAAoDjB,MAAM,CAAC,IAAIkB,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,GAA1B,CAApD,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAII,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,eAKI,oBAAC,iBAAD;AACI,QAAA,GAAG,EAAEL,SAAS,CAACM,OAAV,CAAkBd,GAAlB,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CAHJ,CADJ;AAeH,KAhBa,CAAd;AAiBA,wBACI,oBAAC,IAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,OAAO,EAAC,QAFZ;AAGI,MAAA,KAAK,EAAEL,MAAM,CAACoB,OAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAc,MAAA,EAAE,MAAhB;AAAiB,MAAA,EAAE,MAAnB;AAAoB,MAAA,EAAE,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACI,MAAA,EAAE,EAAC,OADP;AAEI,MAAA,GAAG,EAAC,GAFR;AAGI,MAAA,IAAI,EAAC,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAEpB,MAAM,CAACqB,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKb,YAAY,CAACJ,IAAI,CAACkB,KAAN,CADjB,CALJ,eAQI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAEtB,MAAM,CAACuB,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKZ,KADL,CARJ,CADJ,CALJ,CADJ;AAsBH;;AA5CqD;;AAgD1D,MAAMa,yBAAyB,GAAIjB,KAAD,IAAW;AACzC,sBACI,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACkB,GADX,CADJ,CADJ;AAOH,CARD;;AAUA,MAAMC,iBAAiB,GAAInB,KAAD,IAAW;AACjC,sBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,SAAS,EAAE,CADf;AAEI,IAAA,KAAK,EAAEP,MAAM,CAAC2B,oBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,KAAK,CAACkB,GADX,CAJJ,CADJ,CADJ;AAYH,CAbD;;AAeA,MAAMG,mBAAmB,GAAIrB,KAAD,IAAW;AACnC,sBACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,kBAAD;AACI,IAAA,KAAK,EAAC,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAMI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAUH,CAXD","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from 'react-bootstrap/Card';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport SchoolOutlinedIcon from '@material-ui/icons/SchoolOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Moment from 'moment';\nimport Styles from '../../Styles/TimelineView'\n\nexport default class TimelineView extends React.Component {\n\n    render() {\n        const { data, lng, lngTranslations } = this.props;\n        const Translations = lngTranslations[this.constructor.name];\n        const Inner = data.data.map((sTimeline, idx) => {\n            return (\n                <Timeline\n                    key={idx}\n                    align=\"alternate\">\n                    <TimelineItem>\n                        <MyTimelineOppositeContent\n                            txt={sTimeline.date.replace(/{_UNTIL_NOW_YEAR_TRANS_}/g, Moment(new Date()).format('Y'))}\n                        />\n                        <MyTimelineSeparator />\n                        <MyTimelineContent\n                            txt={sTimeline.content[lng]}\n                        />\n                    </TimelineItem>\n                </Timeline>\n            )\n        });\n        return(\n            <Grid\n                container\n                justify=\"center\"\n                style={Styles.mainRow}\n            >\n                <Grid item xs sm md lg>\n                    <Card\n                        bg=\"light\"\n                        key=\"1\"\n                        text=\"dark\"\n                    >\n                        <Card.Header style={Styles.cardHeader}>\n                            {Translations[data.title]}\n                        </Card.Header>\n                        <Card.Body style={Styles.cardBody}>\n                            {Inner}\n                        </Card.Body>\n                    </Card>\n                </Grid>\n            </Grid>\n        )\n    }\n\n}\n\nconst MyTimelineOppositeContent = (props) => {\n    return (\n        <TimelineOppositeContent>\n            <Typography>\n                {props.txt}\n            </Typography>\n        </TimelineOppositeContent>\n    )\n}\n\nconst MyTimelineContent = (props) => {\n    return (\n        <TimelineContent>\n            <Paper\n                elevation={3}\n                style={Styles.timelineContentPaper}\n            >\n                <Typography>\n                    {props.txt}\n                </Typography>\n            </Paper>\n        </TimelineContent>\n    )\n}\n\nconst MyTimelineSeparator = (props) => {\n    return (\n        <TimelineSeparator>\n            <TimelineDot>\n                <SchoolOutlinedIcon\n                    color=\"primary\"\n                />\n            </TimelineDot>\n            <TimelineConnector />\n        </TimelineSeparator>\n    )\n}"]},"metadata":{},"sourceType":"module"}