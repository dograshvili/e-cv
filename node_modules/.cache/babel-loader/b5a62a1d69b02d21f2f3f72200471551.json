{"ast":null,"code":"var _jsxFileName = \"/data/Git/React/e-cv/src/Components/App/index.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Styles from '../../Styles/App';\nimport data from '../../Resources/CVData/data.json';\nimport el from '../../Languages/el.json';\nimport LanguageSelector from '../../Components/LanguageSelector';\nimport PersonInfo from '../../Components/PersonInfo';\nimport Timeline from '../../Components/Timeline';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateState = state => this.setState(state);\n\n    this.state = {\n      lng: \"el\",\n      lngTranslations: el\n    };\n  }\n\n  render() {\n    const Inner = data.cv_info.map((info, idx) => {\n      if (info.type === \"timeline\") {\n        return /*#__PURE__*/React.createElement(Timeline, {\n          key: idx,\n          data: info,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, null);\n      }\n    });\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: \"xl\",\n      style: Styles.mainContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LanguageSelector, {\n      updateAppState: this.updateState,\n      lng: this.state.lng,\n      lngTranslations: this.state.lngTranslations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(PersonInfo, {\n      data: data.person_info,\n      lngTranslations: this.state.lngTranslations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), Inner);\n  }\n\n}","map":{"version":3,"sources":["/data/Git/React/e-cv/src/Components/App/index.js"],"names":["React","Container","Styles","data","el","LanguageSelector","PersonInfo","Timeline","App","Component","constructor","props","updateState","state","setState","lng","lngTranslations","render","Inner","cv_info","map","info","idx","type","mainContainer","person_info"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,EAAP,MAAe,yBAAf;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,eAAe,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAE7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,WATmB,GASLC,KAAK,IAAI,KAAKC,QAAL,CAAcD,KAAd,CATJ;;AAGf,SAAKA,KAAL,GAAa;AACTE,MAAAA,GAAG,EAAE,IADI;AAETC,MAAAA,eAAe,EAAEZ;AAFR,KAAb;AAIH;;AAIDa,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAIf,IAAI,CAACgB,OAAL,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC3C,UAAID,IAAI,CAACE,IAAL,KAAc,UAAlB,EAA8B;AAC1B,4BACI,oBAAC,QAAD;AACI,UAAA,GAAG,EAAED,GADT;AAEI,UAAA,IAAI,EAAED,IAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,OAPD,MAOO;AACH,4BAAQ,yCAAR;AACH;AACJ,KAXc,CAAf;AAYA,wBACI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAC,IADV;AAEI,MAAA,KAAK,EAAEnB,MAAM,CAACsB,aAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,gBAAD;AACI,MAAA,cAAc,EAAE,KAAKZ,WADzB;AAEI,MAAA,GAAG,EAAE,KAAKC,KAAL,CAAWE,GAFpB;AAGI,MAAA,eAAe,EAAE,KAAKF,KAAL,CAAWG,eAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eASI,oBAAC,UAAD;AACI,MAAA,IAAI,EAAEb,IAAI,CAACsB,WADf;AAEI,MAAA,eAAe,EAAE,KAAKZ,KAAL,CAAWG,eAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAaKE,KAbL,CADJ;AAiBH;;AA3C4C","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Styles from '../../Styles/App';\nimport data from '../../Resources/CVData/data.json';\nimport el from '../../Languages/el.json';\nimport LanguageSelector from '../../Components/LanguageSelector';\nimport PersonInfo from '../../Components/PersonInfo';\nimport Timeline from '../../Components/Timeline';\n\nexport default class App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lng: \"el\",\n            lngTranslations: el\n        }\n    }\n\n    updateState = state => this.setState(state);\n\n    render() {\n        const Inner  = data.cv_info.map((info, idx) => {\n            if (info.type === \"timeline\") {\n                return (\n                    <Timeline\n                        key={idx}\n                        data={info}\n                    />\n                )\n            } else {\n                return (<></>)\n            }\n        });\n        return(\n            <Container\n                fluid=\"xl\"\n                style={Styles.mainContainer}\n            >\n                <LanguageSelector\n                    updateAppState={this.updateState}\n                    lng={this.state.lng}\n                    lngTranslations={this.state.lngTranslations}\n                />\n                <PersonInfo\n                    data={data.person_info}\n                    lngTranslations={this.state.lngTranslations}\n                />\n                {Inner}\n            </Container>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}