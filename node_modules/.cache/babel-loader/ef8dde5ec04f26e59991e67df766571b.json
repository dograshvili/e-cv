{"ast":null,"code":"var _jsxFileName = \"/data/Git/React/e-cv/src/Components/TimelineView/index.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from 'react-bootstrap/Card';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport SchoolOutlinedIcon from '@material-ui/icons/SchoolOutlined';\nimport Moment from 'moment';\nimport Styles from '../../Styles/TimelineView';\nexport default class TimelineView extends React.Component {\n  render() {\n    const {\n      data,\n      lng,\n      lngTranslations\n    } = this.props;\n    const Translations = lngTranslations[this.constructor.name];\n    const Inner = data.data.map((sTimeline, idx) => {\n      var ret = /*#__PURE__*/React.createElement(React.Fragment, null),\n          sContent = sTimeline.content[lng];\n\n      if (sContent) {\n        ret = /*#__PURE__*/React.createElement(TimelineItem, {\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(TimelineOppositeContent, {\n          style: Styles.timelineOppositeContent,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          style: Styles.timelineOppositeContentTypo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }\n        }, sTimeline.date.replace(/{_UNTIL_NOW_YEAR_TRANS_}/g, Moment(new Date()).format('Y')))), /*#__PURE__*/React.createElement(TimelineSeparator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(TimelineDot, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(SchoolOutlinedIcon, {\n          color: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(TimelineConnector, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/React.createElement(TimelineContent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          elevation: 3,\n          style: Styles.timelineContentPaper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }\n        }, sContent), /*#__PURE__*/React.createElement(Typography, {\n          variant: \"subtitle2\",\n          component: \"h3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }\n        }, sContent))));\n      }\n\n      return ret;\n    });\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      style: Styles.mainRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      bg: \"light\",\n      key: \"1\",\n      text: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: Styles.cardHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, Translations[data.title]), /*#__PURE__*/React.createElement(Card.Body, {\n      style: Styles.cardBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Timeline, {\n      align: \"alternate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, Inner)))));\n  }\n\n}","map":{"version":3,"sources":["/data/Git/React/e-cv/src/Components/TimelineView/index.js"],"names":["React","Grid","Card","Timeline","TimelineItem","TimelineSeparator","TimelineConnector","TimelineContent","TimelineOppositeContent","TimelineDot","Paper","Typography","SchoolOutlinedIcon","Moment","Styles","TimelineView","Component","render","data","lng","lngTranslations","props","Translations","constructor","name","Inner","map","sTimeline","idx","ret","sContent","content","timelineOppositeContent","timelineOppositeContentTypo","date","replace","Date","format","timelineContentPaper","mainRow","cardHeader","title","cardBody"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from 'react-bootstrap/Card';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport SchoolOutlinedIcon from '@material-ui/icons/SchoolOutlined';\nimport Moment from 'moment';\nimport Styles from '../../Styles/TimelineView'\n\nexport default class TimelineView extends React.Component {\n\n    render() {\n        const { data, lng, lngTranslations } = this.props;\n        const Translations = lngTranslations[this.constructor.name];\n        const Inner = data.data.map((sTimeline, idx) => {\n            var ret = (<></>), sContent = sTimeline.content[lng];\n            if (sContent) {\n                ret = (\n                    <TimelineItem\n                        key={idx}\n                    >\n                        <TimelineOppositeContent style={Styles.timelineOppositeContent}>\n                            <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                style={Styles.timelineOppositeContentTypo}\n                            >\n                                {sTimeline.date.replace(/{_UNTIL_NOW_YEAR_TRANS_}/g, Moment(new Date()).format('Y'))}\n                            </Typography>\n                        </TimelineOppositeContent>\n                        <TimelineSeparator>\n                            <TimelineDot>\n                                <SchoolOutlinedIcon color=\"primary\" />\n                            </TimelineDot>\n                            <TimelineConnector />\n                        </TimelineSeparator>\n                        <TimelineContent>\n                            <Paper elevation={3} style={Styles.timelineContentPaper}>\n                                <Typography>\n                                    {sContent}\n                                </Typography>\n                                <Typography variant=\"subtitle2\" component=\"h3\">\n                                    {sContent}\n                                </Typography>\n                            </Paper>\n                        </TimelineContent>\n                    </TimelineItem>\n                );\n            }\n            return ret;\n        });\n        return (\n            <Grid\n                container\n                justify=\"center\"\n                style={Styles.mainRow}\n            >\n                <Grid\n                    item\n                    xs={12}\n                    sm={12}\n                    md={12}\n                    lg={12}\n                >\n                    <Card\n                        bg=\"light\"\n                        key=\"1\"\n                        text=\"dark\"\n                    >\n                        <Card.Header style={Styles.cardHeader}>\n                            {Translations[data.title]}\n                        </Card.Header>\n                        <Card.Body style={Styles.cardBody}>\n                            <Timeline align=\"alternate\">\n                                {Inner}\n                            </Timeline>\n                        </Card.Body>\n                    </Card>\n                </Grid>\n            </Grid>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}