{"ast":null,"code":"var _jsxFileName = \"/data/Git/React/e-cv/src/Components/PersonInfo/index.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { isMobile } from 'react-device-detect';\nimport Card from 'react-bootstrap/Card';\nimport Styles from '../../Styles/PersonInfo';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nexport default class PersonInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateState = state => this.setState(state);\n\n    this.state = {\n      blAsk: false,\n      toAsk: \"none\"\n    };\n  }\n\n  render() {\n    const {\n      data,\n      lngTranslations\n    } = this.props;\n    const Translations = lngTranslations[this.constructor.name];\n    const Inner = Object.entries(data).map((entry, idx) => {\n      var entryContent = /*#__PURE__*/React.createElement(React.Fragment, null);\n\n      if (entry[1] === 'ASK_MOBILE' || entry[1] === 'ASK_ADDRESS' || entry[1] === 'ASK_EMAIL') {\n        entryContent = /*#__PURE__*/React.createElement(Button, {\n          style: {\n            textTransform: 'none',\n            color: 'brown',\n            fontSize: '0.75em',\n            padding: '0px'\n          },\n          variant: \"text\",\n          onClick: () => {\n            this.updateState({\n              blAsk: true,\n              toAsk: `${entry[1].toLowerCase().replace('ask_', '')}`\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }\n        }, Translations[`${entry[1].toLowerCase()}_trans`]);\n      } else {\n        entryContent = entry[1];\n      }\n\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 4,\n        lg: 4,\n        className: isMobile ? \"text-center\" : \"text-right\",\n        style: Styles.cardBodyRowCol1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, Translations[entry[0]]), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 8,\n        lg: 8,\n        style: Styles.cardBodyRowCol2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, entryContent));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      style: Styles.mainRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      bg: \"light\",\n      key: \"1\",\n      text: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: Styles.cardHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, Translations.main_title_trans), /*#__PURE__*/React.createElement(Card.Body, {\n      style: Styles.cardBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, Inner)))), /*#__PURE__*/React.createElement(InfoAsk, {\n      updatePersonInfoState: this.updateState,\n      blAsk: this.state.blAsk,\n      toAsk: this.state.toAsk,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst InfoAsk = props => {\n  const {\n    updatePersonInfoState,\n    blAsk,\n    toAsk\n  } = props;\n  return /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: true,\n    maxWidth: \"xl\",\n    open: blAsk,\n    onClose: () => updatePersonInfoState({\n      blAsk: false\n    }),\n    \"aria-labelledby\": \"max-width-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"max-width-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Optional sizes\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, \"You can set my maximum width and whether to adapt or not.\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => updatePersonInfoState({\n      blAsk: false\n    }),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, \"\\u039A\\u03B1\\u03BB\\u03B5\\u03AF\\u03C3\\u03B9\\u03BC\\u03BF\")));\n};","map":{"version":3,"sources":["/data/Git/React/e-cv/src/Components/PersonInfo/index.js"],"names":["React","Grid","isMobile","Card","Styles","Modal","Button","Typography","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","PersonInfo","Component","constructor","props","updateState","state","setState","blAsk","toAsk","render","data","lngTranslations","Translations","name","Inner","Object","entries","map","entry","idx","entryContent","textTransform","color","fontSize","padding","toLowerCase","replace","cardBodyRowCol1","cardBodyRowCol2","mainRow","cardHeader","main_title_trans","cardBody","InfoAsk","updatePersonInfoState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { isMobile } from 'react-device-detect';\nimport Card from 'react-bootstrap/Card';\nimport Styles from '../../Styles/PersonInfo';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class PersonInfo extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            blAsk: false,\n            toAsk: \"none\"\n        };\n    }\n\n    updateState = state => this.setState(state)\n\n    render() {\n        const { data, lngTranslations } = this.props;\n        const Translations = lngTranslations[this.constructor.name];\n        const Inner = Object.entries(data).map((entry, idx) => {\n            var entryContent = (<></>);\n            if (entry[1] === 'ASK_MOBILE' || entry[1] === 'ASK_ADDRESS' || entry[1] === 'ASK_EMAIL') {\n                entryContent = (\n                    <Button\n                        style={{\n                            textTransform: 'none',\n                            color: 'brown',\n                            fontSize: '0.75em',\n                            padding: '0px'\n                        }}\n                        variant=\"text\"\n                        onClick={() => {\n                            this.updateState({\n                                blAsk: true,\n                                toAsk: `${entry[1].toLowerCase().replace('ask_','')}`\n                            });\n                        }}\n                    >\n                        {Translations[`${entry[1].toLowerCase()}_trans`]}\n                    </Button>\n                );\n            } else {\n                entryContent = entry[1];\n            }\n            return (\n                <Grid\n                    container\n                    justify=\"center\"\n                    key={idx}\n                >\n                    <Grid\n                        item\n                        xs={12}\n                        sm={12}\n                        md={4}\n                        lg={4}\n                        className={isMobile ? \"text-center\" : \"text-right\"}\n                        style={Styles.cardBodyRowCol1}\n                    >\n                        {Translations[entry[0]]}\n                    </Grid>\n                    <Grid\n                        item\n                        xs={12}\n                        sm={12}\n                        md={8}\n                        lg={8}\n                        style={Styles.cardBodyRowCol2}\n                    >\n                        {entryContent}\n                    </Grid>\n                </Grid>\n            )\n        })\n        return(\n            <>\n                <Grid\n                    container\n                    justify=\"center\"\n                    style={Styles.mainRow}\n                >\n                    <Grid\n                        item\n                        xs={12}\n                        sm={12}\n                        md={12}\n                        lg={12}\n                    >\n                        <Card\n                            bg=\"light\"\n                            key=\"1\"\n                            text=\"dark\"\n                        >\n                            <Card.Header style={Styles.cardHeader}>\n                                {Translations.main_title_trans}\n                            </Card.Header>\n                            <Card.Body style={Styles.cardBody}>\n                                {Inner}\n                            </Card.Body>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <InfoAsk\n                    updatePersonInfoState={this.updateState}\n                    blAsk={this.state.blAsk}\n                    toAsk={this.state.toAsk}\n                />\n            </>\n        )\n    }\n\n}\n\n\nconst InfoAsk = props => {\n    const { updatePersonInfoState, blAsk, toAsk } = props;\n    return (\n        <Dialog\n            fullWidth={true}\n            maxWidth=\"xl\"\n            open={blAsk}\n            onClose={() => updatePersonInfoState({blAsk: false})}\n            aria-labelledby=\"max-width-dialog-title\"\n        >\n            <DialogTitle\n                id=\"max-width-dialog-title\"\n            >\n                Optional sizes\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    You can set my maximum width and whether to adapt or not.\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    onClick={() => updatePersonInfoState({ blAsk: false })}\n                    color=\"primary\">\n                        Καλείσιμο\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}"]},"metadata":{},"sourceType":"module"}