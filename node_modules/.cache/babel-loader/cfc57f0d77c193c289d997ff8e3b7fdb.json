{"ast":null,"code":"var _jsxFileName = \"/data/Git/React/e-cv/src/Components/ULView/index.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from 'react-bootstrap/Card';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowRightRoundedIcon from '@material-ui/icons/ArrowRightRounded';\nimport Styles from '../../Styles/ULView/';\nexport default class ULView extends React.Component {\n  render() {\n    const {\n      data,\n      lng,\n      lngTranslations\n    } = this.props;\n    const Translations = lngTranslations[this.constructor.name];\n    const Inner = data.data.map((sUL, idx) => {\n      let mainContent,\n          remarksContent,\n          ret = /*#__PURE__*/React.createElement(React.Fragment, null),\n          {\n        content\n      } = sUL;\n\n      if (lng in content.main) {\n        mainContent = content.main[lng];\n      }\n\n      if (lng in content.remarks) {\n        remarksContent = content.remarks[lng];\n      }\n\n      if (\"all\" in content.main) {}\n\n      if (mainContent) {\n        ret = /*#__PURE__*/React.createElement(ULTypography, {\n          key: idx,\n          txtMain: sUL.content.main[lng],\n          txtRemarks: sUL.content.remarks[lng],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }\n        });\n      }\n\n      return ret;\n    });\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      style: Styles.mainRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      sm: true,\n      md: true,\n      lg: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      bg: \"light\",\n      key: \"1\",\n      text: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: Styles.cardHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, Translations[data.title]), /*#__PURE__*/React.createElement(Card.Body, {\n      style: Styles.cardBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, Inner))));\n  }\n\n}\n\nconst ULTypography = props => {\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 10,\n    lg: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"primary\",\n    style: Styles.ulTypography1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ArrowRightRoundedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }), props.txtMain), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    style: Styles.ulTypography2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, props.txtRemarks)));\n};","map":{"version":3,"sources":["/data/Git/React/e-cv/src/Components/ULView/index.js"],"names":["React","Grid","Card","Typography","ArrowRightRoundedIcon","Styles","ULView","Component","render","data","lng","lngTranslations","props","Translations","constructor","name","Inner","map","sUL","idx","mainContent","remarksContent","ret","content","main","remarks","mainRow","cardHeader","title","cardBody","ULTypography","ulTypography1","txtMain","ulTypography2","txtRemarks"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from 'react-bootstrap/Card';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowRightRoundedIcon from '@material-ui/icons/ArrowRightRounded';\nimport Styles from '../../Styles/ULView/';\n\nexport default class ULView extends React.Component {\n\n    render() {\n        const { data, lng, lngTranslations } = this.props;\n        const Translations = lngTranslations[this.constructor.name];\n        const Inner = data.data.map((sUL, idx) => {\n            let mainContent, remarksContent, ret = (<></>), { content } = sUL;\n            if (lng in content.main) {\n                mainContent = content.main[lng];\n            }\n            if (lng in content.remarks) {\n                remarksContent = content.remarks[lng];\n            }\n            if (\"all\" in content.main) {\n\n            }\n            if (mainContent) {\n                ret = (\n                    <ULTypography\n                        key={idx}\n                        txtMain={sUL.content.main[lng]}\n                        txtRemarks={sUL.content.remarks[lng]}\n                    />\n                );\n            }\n            return ret;\n        })\n        return(\n            <Grid\n                container\n                justify=\"center\"\n                style={Styles.mainRow}\n            >\n                <Grid\n                    item xs sm md lg\n                >\n                    <Card\n                        bg=\"light\"\n                        key=\"1\"\n                        text=\"dark\"\n                    >\n                        <Card.Header style={Styles.cardHeader}>\n                            {Translations[data.title]}\n                        </Card.Header>\n                        <Card.Body style={Styles.cardBody}>\n                            {Inner}\n                        </Card.Body>\n                    </Card>\n                </Grid>\n            </Grid>\n        )\n    }\n\n}\n\nconst ULTypography = (props) => {\n    return (\n        <Grid\n            container\n            justify=\"center\"\n        >\n            <Grid\n                item\n                xs={12}\n                sm={12}\n                md={10}\n                lg={8}\n            >\n                <Typography\n                    variant=\"h5\"\n                    color=\"primary\" style={Styles.ulTypography1}\n                >\n                    <ArrowRightRoundedIcon />\n                    {props.txtMain}\n                </Typography>\n                <Typography\n                    variant=\"subtitle1\"\n                    color=\"textSecondary\"\n                    style={Styles.ulTypography2}\n                >\n                    {props.txtRemarks}\n                </Typography>\n            </Grid>\n        </Grid>\n    )\n}"]},"metadata":{},"sourceType":"module"}