{"ast":null,"code":"var _jsxFileName = \"/data/Git/React/e-cv/src/Components/TimelineView/index.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from 'react-bootstrap/Card';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport SchoolOutlinedIcon from '@material-ui/icons/SchoolOutlined';\nimport RestaurantOutlinedIcon from '@material-ui/icons/RestaurantOutlined';\nimport ImportantDevicesOutlinedIcon from '@material-ui/icons/ImportantDevicesOutlined';\nimport WorkOutlineOutlinedIcon from '@material-ui/icons/WorkOutlineOutlined';\nimport AppsOutlinedIcon from '@material-ui/icons/AppsOutlined';\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\nimport TodayOutlinedIcon from '@material-ui/icons/TodayOutlined';\nimport Moment from 'moment';\nimport Styles from '../../Styles/TimelineView';\nexport default class TimelineView extends React.Component {\n  render() {\n    const {\n      data,\n      lng,\n      lngTranslations\n    } = this.props;\n    const Translations = lngTranslations[this.constructor.name];\n    const Inner = data.data.map((sTimeline, idx) => {\n      var ret = /*#__PURE__*/React.createElement(React.Fragment, null),\n          sContent = sTimeline.content[lng],\n          seperatorIcon = /*#__PURE__*/React.createElement(React.Fragment, null);\n\n      if ('seperator' in sTimeline && 'icon' in sTimeline.seperator) {\n        seperatorIcon = /*#__PURE__*/React.createElement(MySeperatorIcon, {\n          icon: sTimeline.seperator.icon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }\n        });\n      }\n\n      if (sContent) {\n        ret = /*#__PURE__*/React.createElement(TimelineItem, {\n          key: idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(TimelineOppositeContent, {\n          style: Styles.timelineOppositeContent,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          style: Styles.timelineOppositeContentTypo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }\n        }, sTimeline.date.replace(/{_UNTIL_NOW_YEAR_TRANS_}/g, Moment(new Date()).format('Y')).replace(/{_UNTIL_NOW_TXT_TRANS_}/g, Translations.until_now_txt_trans))), /*#__PURE__*/React.createElement(TimelineSeparator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(TimelineDot, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }\n        }, seperatorIcon), /*#__PURE__*/React.createElement(TimelineConnector, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }\n        })), /*#__PURE__*/React.createElement(TimelineContent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          elevation: 3,\n          style: Styles.timelineContentPaper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }\n        }, sContent))));\n      }\n\n      return ret;\n    });\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      style: Styles.mainRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      bg: \"light\",\n      key: \"1\",\n      text: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: Styles.cardHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, Translations[data.title]), /*#__PURE__*/React.createElement(Card.Body, {\n      style: Styles.cardBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Timeline, {\n      align: \"alternate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, Inner)))));\n  }\n\n}\n\nconst MySeperatorIcon = props => {\n  let ret = /*#__PURE__*/React.createElement(React.Fragment, null);\n\n  if (props.icon === 'school_outlined') {\n    ret = /*#__PURE__*/React.createElement(SchoolOutlinedIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    });\n  } else if (props.icon === 'restaurant_outlined') {\n    ret = /*#__PURE__*/React.createElement(RestaurantOutlinedIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    });\n  } else if (props.icon === 'important_devices_outlined') {\n    ret = /*#__PURE__*/React.createElement(ImportantDevicesOutlinedIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    });\n  } else if (props.icon === 'work_outlined') {\n    ret = /*#__PURE__*/React.createElement(WorkOutlineOutlinedIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    });\n  } else if (props.icon === 'app_outlined') {\n    ret = /*#__PURE__*/React.createElement(AppsOutlinedIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    });\n  } else if (props.icon === 'dashboard_outlined') {\n    ret = /*#__PURE__*/React.createElement(DashboardOutlinedIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    });\n  } else if (props.icon === 'today_outlined') {\n    ret = /*#__PURE__*/React.createElement(TodayOutlinedIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    });\n  }\n\n  return ret;\n};","map":{"version":3,"sources":["/data/Git/React/e-cv/src/Components/TimelineView/index.js"],"names":["React","Grid","Card","Timeline","TimelineItem","TimelineSeparator","TimelineConnector","TimelineContent","TimelineOppositeContent","TimelineDot","Paper","Typography","SchoolOutlinedIcon","RestaurantOutlinedIcon","ImportantDevicesOutlinedIcon","WorkOutlineOutlinedIcon","AppsOutlinedIcon","DashboardOutlinedIcon","TodayOutlinedIcon","Moment","Styles","TimelineView","Component","render","data","lng","lngTranslations","props","Translations","constructor","name","Inner","map","sTimeline","idx","ret","sContent","content","seperatorIcon","seperator","icon","timelineOppositeContent","timelineOppositeContentTypo","date","replace","Date","format","until_now_txt_trans","timelineContentPaper","mainRow","cardHeader","title","cardBody","MySeperatorIcon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from 'react-bootstrap/Card';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport SchoolOutlinedIcon from '@material-ui/icons/SchoolOutlined';\nimport RestaurantOutlinedIcon from '@material-ui/icons/RestaurantOutlined';\nimport ImportantDevicesOutlinedIcon from '@material-ui/icons/ImportantDevicesOutlined';\nimport WorkOutlineOutlinedIcon from '@material-ui/icons/WorkOutlineOutlined';\nimport AppsOutlinedIcon from '@material-ui/icons/AppsOutlined';\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\nimport TodayOutlinedIcon from '@material-ui/icons/TodayOutlined';\nimport Moment from 'moment';\nimport Styles from '../../Styles/TimelineView'\n\nexport default class TimelineView extends React.Component {\n\n    render() {\n        const { data, lng, lngTranslations } = this.props;\n        const Translations = lngTranslations[this.constructor.name];\n        const Inner = data.data.map((sTimeline, idx) => {\n            var ret = (<></>), sContent = sTimeline.content[lng], seperatorIcon = (<></>);\n            if ('seperator' in sTimeline && 'icon' in sTimeline.seperator) {\n                seperatorIcon = <MySeperatorIcon icon={sTimeline.seperator.icon} />\n            }\n            if (sContent) {\n                ret = (\n                    <TimelineItem\n                        key={idx}\n                    >\n                        <TimelineOppositeContent style={Styles.timelineOppositeContent}>\n                            <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                style={Styles.timelineOppositeContentTypo}\n                            >\n                                {\n                                    sTimeline\n                                        .date\n                                        .replace(/{_UNTIL_NOW_YEAR_TRANS_}/g, Moment(new Date()).format('Y'))\n                                        .replace(/{_UNTIL_NOW_TXT_TRANS_}/g, Translations.until_now_txt_trans)\n                                }\n                            </Typography>\n                        </TimelineOppositeContent>\n                        <TimelineSeparator>\n                            <TimelineDot>\n                                {seperatorIcon}\n                            </TimelineDot>\n                            <TimelineConnector />\n                        </TimelineSeparator>\n                        <TimelineContent>\n                            <Paper elevation={3} style={Styles.timelineContentPaper}>\n                                <Typography>\n                                    {sContent}\n                                </Typography>\n                            </Paper>\n                        </TimelineContent>\n                    </TimelineItem>\n                );\n            }\n            return ret;\n        });\n        return (\n            <Grid\n                container\n                justify=\"center\"\n                style={Styles.mainRow}\n            >\n                <Grid\n                    item\n                    xs={12}\n                    sm={12}\n                    md={12}\n                    lg={12}\n                >\n                    <Card\n                        bg=\"light\"\n                        key=\"1\"\n                        text=\"dark\"\n                    >\n                        <Card.Header style={Styles.cardHeader}>\n                            {Translations[data.title]}\n                        </Card.Header>\n                        <Card.Body style={Styles.cardBody}>\n                            <Timeline align=\"alternate\">\n                                {Inner}\n                            </Timeline>\n                        </Card.Body>\n                    </Card>\n                </Grid>\n            </Grid>\n        )\n    }\n\n}\n\nconst MySeperatorIcon = props => {\n    let ret = (<></>);\n    if (props.icon === 'school_outlined') {\n        ret = <SchoolOutlinedIcon color=\"primary\" />;\n    } else if (props.icon === 'restaurant_outlined') {\n        ret = <RestaurantOutlinedIcon color=\"primary\" />;\n    } else if (props.icon === 'important_devices_outlined') {\n        ret = <ImportantDevicesOutlinedIcon color=\"primary\" />;\n    } else if (props.icon === 'work_outlined') {\n        ret = <WorkOutlineOutlinedIcon color=\"primary\" />;\n    } else if (props.icon === 'app_outlined') {\n        ret = <AppsOutlinedIcon color=\"primary\" />;\n    } else if (props.icon === 'dashboard_outlined') {\n        ret = <DashboardOutlinedIcon color=\"primary\" />;\n    } else if (props.icon === 'today_outlined') {\n        ret = <TodayOutlinedIcon color=\"primary\" />;\n    }\n    return ret;\n}"]},"metadata":{},"sourceType":"module"}