{"ast":null,"code":"var _jsxFileName = \"/data/Git/React/e-cv/src/Components/App/index.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Styles from '../../Styles/App';\nimport data from '../../Resources/CVData/data.json';\nimport en from '../../Languages/en.json';\nimport LanguageSelector from '../../Components/LanguageSelector';\nimport PersonInfo from '../../Components/PersonInfo';\nimport TimelineView from '../TimelineView';\nimport ULView from '../../Components/ULView';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {// this.changeBackgroundImage();\n    };\n\n    this.changeBackgroundImage = () => {// const current = this.state.currentBackgroundImage;\n      // let next;\n      // if (current === 5) {\n      //     next = 1;\n      // } else {\n      //     next = (current + 1);\n      // }\n      // setTimeout(() => {\n      //     this.updateState({\n      //         currentBackgroundImage: next,\n      //         backgroundImage: `url(/assets/images/b_img_${next}.jpg) no-repeat center center fixed`\n      //     });\n      //     this.changeBackgroundImage();\n      // }, this.state.backgroundImageTime);\n    };\n\n    this.updateState = state => this.setState(state);\n\n    this.state = {\n      lng: \"en\",\n      lngTranslations: en,\n      currentBackgroundImage: 1,\n      backgroundImage: \"url(/assets/images/b_img_1.jpg) no-repeat center center fixed\",\n      backgroundImageTime: 1000\n    };\n  }\n\n  render() {\n    const {\n      lng,\n      lngTranslations\n    } = this.state;\n    const Inner = data.cv_info.map((info, idx) => {\n      if (info.type === \"timeline\") {\n        return /*#__PURE__*/React.createElement(TimelineView, {\n          key: idx,\n          data: info,\n          lng: lng,\n          lngTranslations: lngTranslations,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }\n        });\n      } else if (info.type === \"ul\") {\n        return /*#__PURE__*/React.createElement(ULView, {\n          key: idx,\n          data: info,\n          lng: lng,\n          lngTranslations: lngTranslations,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, null);\n      }\n    });\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      style: {\n        background: this.state.backgroundImage,\n        backgroundSize: \"cover\",\n        height: \"100%\",\n        overflow: \"hidden\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 6,\n      lg: 8,\n      style: Styles.mainContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LanguageSelector, {\n      updateAppState: this.updateState,\n      lng: lng,\n      lngTranslations: lngTranslations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(PersonInfo, {\n      data: data.person_info,\n      lngTranslations: lngTranslations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }), Inner));\n  }\n\n}","map":{"version":3,"sources":["/data/Git/React/e-cv/src/Components/App/index.js"],"names":["React","Grid","Styles","data","en","LanguageSelector","PersonInfo","TimelineView","ULView","App","Component","constructor","props","componentDidMount","changeBackgroundImage","updateState","state","setState","lng","lngTranslations","currentBackgroundImage","backgroundImage","backgroundImageTime","render","Inner","cv_info","map","info","idx","type","background","backgroundSize","height","overflow","mainContainer","person_info"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Styles from '../../Styles/App';\nimport data from '../../Resources/CVData/data.json';\nimport en from '../../Languages/en.json';\nimport LanguageSelector from '../../Components/LanguageSelector';\nimport PersonInfo from '../../Components/PersonInfo';\nimport TimelineView from '../TimelineView';\nimport ULView from '../../Components/ULView';\n\nexport default class App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lng: \"en\",\n            lngTranslations: en,\n            currentBackgroundImage: 1,\n            backgroundImage: \"url(/assets/images/b_img_1.jpg) no-repeat center center fixed\",\n            backgroundImageTime: 1000\n        }\n    }\n\n    componentDidMount = () => {\n        // this.changeBackgroundImage();\n    }\n\n    changeBackgroundImage = () => {\n\n        // const current = this.state.currentBackgroundImage;\n        // let next;\n        // if (current === 5) {\n        //     next = 1;\n        // } else {\n        //     next = (current + 1);\n        // }\n        // setTimeout(() => {\n        //     this.updateState({\n        //         currentBackgroundImage: next,\n        //         backgroundImage: `url(/assets/images/b_img_${next}.jpg) no-repeat center center fixed`\n        //     });\n        //     this.changeBackgroundImage();\n        // }, this.state.backgroundImageTime);\n    }\n\n    updateState = state => this.setState(state);\n\n    render() {\n        const { lng, lngTranslations } = this.state;\n        const Inner  = data.cv_info.map((info, idx) => {\n            if (info.type === \"timeline\") {\n                return (\n                    <TimelineView\n                        key={idx}\n                        data={info}\n                        lng={lng}\n                        lngTranslations={lngTranslations}\n                    />\n                )\n            } else if (info.type === \"ul\") {\n                return (\n                    <ULView\n                        key={idx}\n                        data={info}\n                        lng={lng}\n                        lngTranslations={lngTranslations}\n                    />\n                )\n            } else {\n                return (<></>)\n            }\n        });\n        return(\n            <Grid\n                container\n                justify=\"center\"\n                style={{\n                    background: this.state.backgroundImage,\n                    backgroundSize: \"cover\",\n                    height: \"100%\",\n                    overflow: \"hidden\"\n                }}\n            >\n                <Grid\n                    item xs={12}\n                    sm={12}\n                    md={6}\n                    lg={8}\n                    style={Styles.mainContainer}\n                >\n                    <LanguageSelector\n                        updateAppState={this.updateState}\n                        lng={lng}\n                        lngTranslations={lngTranslations}\n                    />\n                    <PersonInfo\n                        data={data.person_info}\n                        lngTranslations={lngTranslations}\n                    />\n                    {Inner}\n                </Grid>\n            </Grid>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}