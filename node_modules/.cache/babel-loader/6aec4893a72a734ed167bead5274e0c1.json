{"ast":null,"code":"var _jsxFileName = \"/data/Git/React/e-cv/src/Components/LanguageSelector/index.js\";\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport el from '../../Languages/el.json';\nimport en from '../../Languages/en.json';\nimport ka from '../../Languages/ka.json';\nexport default class LanguageSelector extends React.Component {\n  render() {\n    const Translations = this.props.lngTranslations[this.constructor.name];\n    const {\n      lng,\n      updateAppState\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Row, {\n      style: {\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      onSelect: lngNew => {\n        if (lngNew !== lng) {\n          if (lngNew === \"en\") {\n            updateAppState({\n              lng: lngNew,\n              lngTranslations: en\n            });\n          } else if (lngNew === \"ka\") {\n            updateAppState({\n              lng: lngNew,\n              lngTranslations: ka\n            });\n          } else {\n            updateAppState({\n              lng: \"el\",\n              lngTranslations: el\n            });\n          }\n\n          this.lngSelectRef.current.blur();\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"secondary\",\n      id: \"language_select\",\n      ref: ref => this.lngSelectRef = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, Translations.dropdown_choose_language), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      active: lng === \"el\",\n      eventKey: \"el\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, Translations.dropdown_choose_language_el), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      active: lng === \"en\",\n      eventKey: \"en\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, Translations.dropdown_choose_language_en), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      active: lng === \"ka\",\n      eventKey: \"ka\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, Translations.dropdown_choose_language_ka)))));\n  }\n\n}","map":{"version":3,"sources":["/data/Git/React/e-cv/src/Components/LanguageSelector/index.js"],"names":["React","Row","Col","Dropdown","el","en","ka","LanguageSelector","Component","render","Translations","props","lngTranslations","constructor","name","lng","updateAppState","textAlign","lngNew","lngSelectRef","current","blur","ref","dropdown_choose_language","dropdown_choose_language_el","dropdown_choose_language_en","dropdown_choose_language_ka"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,EAAP,MAAe,yBAAf;AACA,OAAOC,EAAP,MAAe,yBAAf;AACA,OAAOC,EAAP,MAAe,yBAAf;AAEA,eAAe,MAAMC,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA+C;AAE1DC,EAAAA,MAAM,GAAG;AACL,UAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWC,eAAX,CAA2B,KAAKC,WAAL,CAAiBC,IAA5C,CAArB;AACA,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAA0B,KAAKL,KAArC;AACA,wBACI,oBAAC,GAAD;AACI,MAAA,KAAK,EAAE;AACHM,QAAAA,SAAS,EAAE;AADR,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,GAAD;AACI,MAAA,EAAE,EAAE,EADR;AACY,MAAA,EAAE,EAAE,EADhB;AACoB,MAAA,EAAE,EAAE,EADxB;AAC4B,MAAA,EAAE,EAAE,EADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,QAAD;AACI,MAAA,QAAQ,EAAEC,MAAM,IAAI;AAChB,YAAIA,MAAM,KAAKH,GAAf,EAAoB;AAChB,cAAIG,MAAM,KAAK,IAAf,EAAqB;AACjBF,YAAAA,cAAc,CAAC;AACXD,cAAAA,GAAG,EAAEG,MADM;AAEXN,cAAAA,eAAe,EAAEP;AAFN,aAAD,CAAd;AAIH,WALD,MAKO,IAAIa,MAAM,KAAK,IAAf,EAAqB;AACxBF,YAAAA,cAAc,CAAC;AACXD,cAAAA,GAAG,EAAEG,MADM;AAEXN,cAAAA,eAAe,EAAEN;AAFN,aAAD,CAAd;AAIH,WALM,MAKA;AACHU,YAAAA,cAAc,CAAC;AACXD,cAAAA,GAAG,EAAE,IADM;AAEXH,cAAAA,eAAe,EAAER;AAFN,aAAD,CAAd;AAIH;;AACD,eAAKe,YAAL,CAAkBC,OAAlB,CAA0BC,IAA1B;AACH;AACJ,OArBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAuBI,oBAAC,QAAD,CAAU,MAAV;AACI,MAAA,OAAO,EAAC,WADZ;AAEI,MAAA,EAAE,EAAC,iBAFP;AAGI,MAAA,GAAG,EAAEC,GAAG,IAAI,KAAKH,YAAL,GAAoBG,GAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKZ,YAAY,CAACa,wBALlB,CAvBJ,eA8BI,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD,CAAU,IAAV;AACI,MAAA,MAAM,EAAER,GAAG,KAAK,IADpB;AAEI,MAAA,QAAQ,EAAC,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKL,YAAY,CAACc,2BAJlB,CADJ,eAOI,oBAAC,QAAD,CAAU,IAAV;AACI,MAAA,MAAM,EAAET,GAAG,KAAK,IADpB;AAEI,MAAA,QAAQ,EAAC,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKL,YAAY,CAACe,2BAJlB,CAPJ,eAaI,oBAAC,QAAD,CAAU,IAAV;AACI,MAAA,MAAM,EAAEV,GAAG,KAAK,IADpB;AAEI,MAAA,QAAQ,EAAC,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKL,YAAY,CAACgB,2BAJlB,CAbJ,CA9BJ,CAHJ,CALJ,CADJ;AA+DH;;AApEyD","sourcesContent":["import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport el from '../../Languages/el.json';\nimport en from '../../Languages/en.json';\nimport ka from '../../Languages/ka.json';\n\nexport default class LanguageSelector extends React.Component {\n\n    render() {\n        const Translations = this.props.lngTranslations[this.constructor.name];\n        const { lng, updateAppState } = this.props;\n        return(\n            <Row\n                style={{\n                    textAlign: 'right'\n                }}\n            >\n                <Col\n                    xs={12} sm={12} md={12} lg={12}\n                >\n                    <Dropdown\n                        onSelect={lngNew => {\n                            if (lngNew !== lng) {\n                                if (lngNew === \"en\") {\n                                    updateAppState({\n                                        lng: lngNew,\n                                        lngTranslations: en\n                                    });\n                                } else if (lngNew === \"ka\") {\n                                    updateAppState({\n                                        lng: lngNew,\n                                        lngTranslations: ka\n                                    });\n                                } else {\n                                    updateAppState({\n                                        lng: \"el\",\n                                        lngTranslations: el\n                                    });\n                                }\n                                this.lngSelectRef.current.blur();\n                            }\n                        }}\n                    >\n                        <Dropdown.Toggle\n                            variant=\"secondary\"\n                            id=\"language_select\"\n                            ref={ref => this.lngSelectRef = ref}\n                        >\n                            {Translations.dropdown_choose_language}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item\n                                active={lng === \"el\"}\n                                eventKey=\"el\"\n                            >\n                                {Translations.dropdown_choose_language_el}\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                                active={lng === \"en\"}\n                                eventKey=\"en\"\n                            >\n                                {Translations.dropdown_choose_language_en}\n                            </Dropdown.Item>\n                            <Dropdown.Item\n                                active={lng === \"ka\"}\n                                eventKey=\"ka\"\n                            >\n                                {Translations.dropdown_choose_language_ka}\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Col>\n            </Row>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}