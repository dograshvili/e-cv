{"ast":null,"code":"var _jsxFileName = \"/data/Git/React/e-cv/src/Components/PersonInfo/index.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { isMobile } from 'react-device-detect';\nimport Card from 'react-bootstrap/Card';\nimport Styles from '../../Styles/PersonInfo';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextsmsOutlinedIcon from '@material-ui/icons/TextsmsOutlined';\nimport Slide from '@material-ui/core/Slide';\nimport Link from '@material-ui/core/Link';\nexport default class PersonInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateState = state => this.setState(state);\n\n    this.state = {\n      blAsk: false,\n      toAsk: \"none\"\n    };\n  }\n\n  render() {\n    const {\n      data,\n      lngTranslations\n    } = this.props;\n    const Translations = lngTranslations['PersonInfo'];\n    const Inner = Object.entries(data).map((entry, idx) => {\n      var entryContent = /*#__PURE__*/React.createElement(React.Fragment, null);\n\n      if (entry[1] === 'ASK_MOBILE' || entry[1] === 'ASK_ADDRESS' || entry[1] === 'ASK_EMAIL') {\n        entryContent = /*#__PURE__*/React.createElement(Button, {\n          style: {\n            // textTransform: 'none',\n            // color: 'brown',\n            // fontSize: '0.75em',\n            padding: '2px'\n          },\n          variant: \"text\",\n          onClick: () => {\n            this.updateState({\n              blAsk: true,\n              toAsk: `${entry[1].toLowerCase().replace('ask_', '')}`\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(TextsmsOutlinedIcon, {\n          color: \"primary\",\n          fontSize: \"default\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }\n        }));\n      } else if (entry[1] === 'LINKELEM_GIT') {\n        entryContent = /*#__PURE__*/React.createElement(Link, {\n          href: \"https://github.com/dograshvili/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }\n        });\n      } else {\n        entryContent = entry[1];\n      }\n\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 4,\n        lg: 4,\n        className: isMobile ? \"text-center\" : \"text-right\",\n        style: Styles.cardBodyRowCol1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, Translations[entry[0]]), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 8,\n        lg: 8,\n        style: Styles.cardBodyRowCol2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, entryContent));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      style: Styles.mainRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      bg: \"light\",\n      key: \"1\",\n      text: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: Styles.cardHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, Translations.main_title_trans), /*#__PURE__*/React.createElement(Card.Body, {\n      style: Styles.cardBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, Inner)))), /*#__PURE__*/React.createElement(InfoAsk, {\n      updatePersonInfoState: this.updateState,\n      blAsk: this.state.blAsk,\n      toAsk: this.state.toAsk,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 12\n    }\n  }));\n});\n\nconst InfoAsk = props => {\n  const {\n    updatePersonInfoState,\n    blAsk,\n    toAsk\n  } = props;\n  return /*#__PURE__*/React.createElement(Dialog, {\n    TransitionComponent: Transition,\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    fullWidth: true,\n    maxWidth: \"lg\",\n    onClose: () => updatePersonInfoState({\n      blAsk: false\n    }),\n    open: blAsk,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-slide-title\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      fontSize: \"1.3em\",\n      borderBottom: \"1px solid #f8f9fa\",\n      textTransform: \"uppercase\",\n      color: \"brown\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, \"confirmation required\")), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-slide-description\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, `You asked for [${toAsk}]. This feature is temporary disabled. Check again later`)), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => updatePersonInfoState({\n      blAsk: false\n    }),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, \"\\u03BA\\u03BB\\u03B5\\u03B9\\u03C3\\u03B9\\u03BC\\u03BF\")));\n};","map":{"version":3,"sources":["/data/Git/React/e-cv/src/Components/PersonInfo/index.js"],"names":["React","Grid","isMobile","Card","Styles","Button","Typography","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextsmsOutlinedIcon","Slide","Link","PersonInfo","Component","constructor","props","updateState","state","setState","blAsk","toAsk","render","data","lngTranslations","Translations","Inner","Object","entries","map","entry","idx","entryContent","padding","toLowerCase","replace","cardBodyRowCol1","cardBodyRowCol2","mainRow","cardHeader","main_title_trans","cardBody","Transition","forwardRef","ref","InfoAsk","updatePersonInfoState","textAlign","fontSize","borderBottom","textTransform","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { isMobile } from 'react-device-detect';\nimport Card from 'react-bootstrap/Card';\nimport Styles from '../../Styles/PersonInfo';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextsmsOutlinedIcon from '@material-ui/icons/TextsmsOutlined';\nimport Slide from '@material-ui/core/Slide';\nimport Link from '@material-ui/core/Link';\n\nexport default class PersonInfo extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            blAsk: false,\n            toAsk: \"none\"\n        };\n    }\n\n    updateState = state => this.setState(state)\n\n    render() {\n        const { data, lngTranslations } = this.props;\n        const Translations = lngTranslations['PersonInfo'];\n        const Inner = Object.entries(data).map((entry, idx) => {\n            var entryContent = (<></>);\n            if (entry[1] === 'ASK_MOBILE' || entry[1] === 'ASK_ADDRESS' || entry[1] === 'ASK_EMAIL') {\n                entryContent = (\n                    <Button\n                        style={{\n                            // textTransform: 'none',\n                            // color: 'brown',\n                            // fontSize: '0.75em',\n                            padding: '2px'\n                        }}\n                        variant=\"text\"\n                        onClick={() => {\n                            this.updateState({\n                                blAsk: true,\n                                toAsk: `${entry[1].toLowerCase().replace('ask_','')}`\n                            });\n                        }}\n                    >\n                        <TextsmsOutlinedIcon\n                            color=\"primary\"\n                            fontSize=\"default\"\n                        />\n                        {/* {Translations[`${entry[1].toLowerCase()}_trans`]} */}\n                    </Button>\n                );\n            } else if (entry[1] === 'LINKELEM_GIT') {\n                entryContent = (<Link\n                    href=\"https://github.com/dograshvili/\"\n                />);\n            } else {\n                entryContent = entry[1];\n            }\n            return (\n                <Grid\n                    container\n                    justify=\"center\"\n                    key={idx}\n                >\n                    <Grid\n                        item\n                        xs={12}\n                        sm={12}\n                        md={4}\n                        lg={4}\n                        className={isMobile ? \"text-center\" : \"text-right\"}\n                        style={Styles.cardBodyRowCol1}\n                    >\n                        {Translations[entry[0]]}\n                    </Grid>\n                    <Grid\n                        item\n                        xs={12}\n                        sm={12}\n                        md={8}\n                        lg={8}\n                        style={Styles.cardBodyRowCol2}\n                    >\n                        {entryContent}\n                    </Grid>\n                </Grid>\n            )\n        })\n        return(\n            <>\n                <Grid\n                    container\n                    justify=\"center\"\n                    style={Styles.mainRow}\n                >\n                    <Grid\n                        item\n                        xs={12}\n                        sm={12}\n                        md={12}\n                        lg={12}\n                    >\n                        <Card\n                            bg=\"light\"\n                            key=\"1\"\n                            text=\"dark\"\n                        >\n                            <Card.Header style={Styles.cardHeader}>\n                                {Translations.main_title_trans}\n                            </Card.Header>\n                            <Card.Body style={Styles.cardBody}>\n                                {Inner}\n                            </Card.Body>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <InfoAsk\n                    updatePersonInfoState={this.updateState}\n                    blAsk={this.state.blAsk}\n                    toAsk={this.state.toAsk}\n                />\n            </>\n        )\n    }\n\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst InfoAsk = props => {\n    const { updatePersonInfoState, blAsk, toAsk } = props;\n\n    return (\n        <Dialog\n            TransitionComponent={Transition}\n            disableBackdropClick={true}\n            disableEscapeKeyDown={true}\n            fullWidth={true}\n            maxWidth=\"lg\"\n            onClose={() => updatePersonInfoState({ blAsk: false })}\n            open={blAsk}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n        >\n            <DialogTitle\n                id=\"alert-dialog-slide-title\"\n                style={{\n                    textAlign: \"center\"\n                }}\n            >\n                <Typography\n                    style={{\n                        fontSize: \"1.3em\",\n                        borderBottom: \"1px solid #f8f9fa\",\n                        textTransform: \"uppercase\",\n                        color: \"brown\"\n                    }}\n                >\n                    confirmation required\n                </Typography>\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText\n                    id=\"alert-dialog-slide-description\"\n                    style={{\n                        textAlign: \"center\"\n                    }}\n                >\n                    {`You asked for [${toAsk}]. This feature is temporary disabled. Check again later`}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    onClick={() => updatePersonInfoState({ blAsk: false })}\n                    color=\"primary\">\n                        κλεισιμο\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}"]},"metadata":{},"sourceType":"module"}