{"ast":null,"code":"var _jsxFileName = \"/data/Git/React/e-cv/src/Components/PersonInfo/index.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { isMobile } from 'react-device-detect';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Styles from '../../Styles/PersonInfo';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from '@material-ui/core/Button';\nexport default class PersonInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateState = state => this.setState(state);\n\n    this.state = {\n      'blAsk': false,\n      'toAsk': \"none\"\n    };\n  }\n\n  render() {\n    const {\n      data,\n      lngTranslations\n    } = this.props;\n    const Translations = lngTranslations[this.constructor.name];\n    const Inner = Object.entries(data).map((entry, idx) => {\n      var entryContent = /*#__PURE__*/React.createElement(React.Fragment, null);\n\n      if (entry[1] === 'ASK_MOBILE' || entry[1] === 'ASK_ADDRESS' || entry[1] === 'ASK_EMAIL') {\n        entryContent = /*#__PURE__*/React.createElement(Button, {\n          style: {\n            textTransform: 'none',\n            color: 'brown'\n          },\n          variant: \"text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }\n        }, Translations[`${entry[1].toLowerCase()}_trans`]);\n      } else {\n        entryContent = entry[1];\n      }\n\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 4,\n        lg: 4,\n        className: isMobile ? \"text-center\" : \"text-right\",\n        style: Styles.cardBodyRowCol1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, Translations[entry[0]]), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 8,\n        lg: 8,\n        style: Styles.cardBodyRowCol2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, entryContent));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      style: Styles.mainRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      sm: true,\n      md: true,\n      lg: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      bg: \"light\",\n      key: \"1\",\n      text: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: Styles.cardHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, Translations.main_title_trans), /*#__PURE__*/React.createElement(Card.Body, {\n      style: Styles.cardBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, Inner)))), /*#__PURE__*/React.createElement(InfoAsk, {\n      updatePersonInfoState: this.updateState,\n      blAsk: this.state.blAsk,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst InfoAsk = props => {\n  const {\n    updatePersonInfoState,\n    blAsk\n  } = props;\n  return /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    centered: true,\n    keyboard: false,\n    show: blAsk,\n    onHide: () => updatePersonInfoState({\n      'blAsk': false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"ask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"Large Modal\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"...\"));\n};","map":{"version":3,"sources":["/data/Git/React/e-cv/src/Components/PersonInfo/index.js"],"names":["React","Grid","isMobile","Row","Col","Card","Styles","Modal","Button","PersonInfo","Component","constructor","props","updateState","state","setState","render","data","lngTranslations","Translations","name","Inner","Object","entries","map","entry","idx","entryContent","textTransform","color","toLowerCase","cardBodyRowCol1","cardBodyRowCol2","mainRow","cardHeader","main_title_trans","cardBody","blAsk","InfoAsk","updatePersonInfoState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { isMobile } from 'react-device-detect';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Styles from '../../Styles/PersonInfo';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from '@material-ui/core/Button';\n\nexport default class PersonInfo extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            'blAsk': false,\n            'toAsk': \"none\"\n        };\n    }\n\n    updateState = state => this.setState(state)\n\n    render() {\n        const { data, lngTranslations } = this.props;\n        const Translations = lngTranslations[this.constructor.name];\n        const Inner = Object.entries(data).map((entry, idx) => {\n            var entryContent = (<></>);\n            if (entry[1] === 'ASK_MOBILE' || entry[1] === 'ASK_ADDRESS' || entry[1] === 'ASK_EMAIL') {\n                entryContent = (\n                    <Button\n                        style={{\n                            textTransform: 'none',\n                            color: 'brown'\n                        }}\n                        variant=\"text\"\n                    >\n                        {Translations[`${entry[1].toLowerCase()}_trans`]}\n                    </Button>\n                );\n            } else {\n                entryContent = entry[1];\n            }\n            return (\n                <Grid\n                    container\n                    justify=\"center\"\n                    key={idx}\n                >\n                    <Grid\n                        item\n                        xs={12}\n                        sm={12}\n                        md={4}\n                        lg={4}\n                        className={isMobile ? \"text-center\" : \"text-right\"}\n                        style={Styles.cardBodyRowCol1}\n                    >\n                        {Translations[entry[0]]}\n                    </Grid>\n                    <Grid\n                        item\n                        xs={12}\n                        sm={12}\n                        md={8}\n                        lg={8}\n                        style={Styles.cardBodyRowCol2}\n                    >\n                        {entryContent}\n                    </Grid>\n                </Grid>\n            )\n        })\n        return(\n            <>\n                <Row\n                    style={Styles.mainRow}\n                >\n                    <Col xs sm md lg>\n                        <Card\n                            bg=\"light\"\n                            key=\"1\"\n                            text=\"dark\"\n                        >\n                            <Card.Header style={Styles.cardHeader}>\n                                {Translations.main_title_trans}\n                            </Card.Header>\n                            <Card.Body style={Styles.cardBody}>\n                                {Inner}\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n                <InfoAsk\n                    updatePersonInfoState={this.updateState}\n                    blAsk={this.state.blAsk}\n                />\n            </>\n        )\n    }\n\n}\n\n\nconst InfoAsk = props => {\n    const { updatePersonInfoState, blAsk } = props;\n    return (\n        <Modal\n            size=\"lg\"\n            centered={true}\n            keyboard={false}\n            show={blAsk}\n            onHide={() => updatePersonInfoState({\n                'blAsk': false\n            })}\n        >\n            <Modal.Header\n                closeButton={true}\n            >\n                <Modal.Title id=\"ask\">\n                    Large Modal\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                ...\n            </Modal.Body>\n        </Modal>\n    )\n}"]},"metadata":{},"sourceType":"module"}