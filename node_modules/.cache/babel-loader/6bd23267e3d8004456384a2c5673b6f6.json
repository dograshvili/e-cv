{"ast":null,"code":"var _jsxFileName = \"/data/Git/React/e-cv/src/Components/LanguageSelector/index.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport el from '../../Languages/el.json';\nimport en from '../../Languages/en.json';\nimport ka from '../../Languages/ka.json';\nimport Styles from '../../Styles/LanguageSelector/';\nexport default class LanguageSelector extends React.Component {\n  render() {\n    const {\n      lng,\n      updateAppState,\n      lngTranslations\n    } = this.props;\n    const Translations = lngTranslations[this.constructor.name];\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 8,\n      lg: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: Styles.mainTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, Translations.main_title_trans))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 4,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      labelId: \"demo-simple-select-label\",\n      id: \"demo-simple-select\",\n      value: Translations.dropdown_choose_language_trans // onChange={\n      // }\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"el\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, Translations.dropdown_choose_language_el_trans), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"en\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, Translations.dropdown_choose_language_en_trans), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"ka\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, Translations.dropdown_choose_language_ka_trans)))));\n  }\n\n}","map":{"version":3,"sources":["/data/Git/React/e-cv/src/Components/LanguageSelector/index.js"],"names":["React","Grid","MenuItem","Select","Dropdown","el","en","ka","Styles","LanguageSelector","Component","render","lng","updateAppState","lngTranslations","props","Translations","constructor","name","mainTitle","main_title_trans","dropdown_choose_language_trans","dropdown_choose_language_el_trans","dropdown_choose_language_en_trans","dropdown_choose_language_ka_trans"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,EAAP,MAAe,yBAAf;AACA,OAAOC,EAAP,MAAe,yBAAf;AACA,OAAOC,EAAP,MAAe,yBAAf;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AAEA,eAAe,MAAMC,gBAAN,SAA+BT,KAAK,CAACU,SAArC,CAA+C;AAE1DC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,cAAP;AAAuBC,MAAAA;AAAvB,QAA2C,KAAKC,KAAtD;AACA,UAAMC,YAAY,GAAGF,eAAe,CAAC,KAAKG,WAAL,CAAiBC,IAAlB,CAApC;AACA,wBACI,oBAAC,IAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,OAAO,EAAC,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,EAFR;AAGI,MAAA,EAAE,EAAE,EAHR;AAII,MAAA,EAAE,EAAE,CAJR;AAKI,MAAA,EAAE,EAAE,CALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,IAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,OAAO,EAAC,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAI,MAAA,KAAK,EAAEV,MAAM,CAACW,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,YAAY,CAACI,gBADlB,CAJJ,CAPJ,CAJJ,eAoBI,oBAAC,IAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAE,EAFR;AAGI,MAAA,EAAE,EAAE,EAHR;AAII,MAAA,EAAE,EAAE,CAJR;AAKI,MAAA,EAAE,EAAE,CALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,IAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,OAAO,EAAC,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,MAAD;AACI,MAAA,OAAO,EAAC,0BADZ;AAEI,MAAA,EAAE,EAAC,oBAFP;AAGI,MAAA,KAAK,EAAEJ,YAAY,CAACK,8BAHxB,CAII;AAEA;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBL,YAAY,CAACM,iCAAnC,CARJ,eASI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBN,YAAY,CAACO,iCAAnC,CATJ,eAUI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBP,YAAY,CAACQ,iCAAnC,CAVJ,CAJJ,CAPJ,CApBJ,CADJ;AAmGH;;AAxGyD","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport el from '../../Languages/el.json';\nimport en from '../../Languages/en.json';\nimport ka from '../../Languages/ka.json';\nimport Styles from '../../Styles/LanguageSelector/';\n\nexport default class LanguageSelector extends React.Component {\n\n    render() {\n        const { lng, updateAppState, lngTranslations } = this.props;\n        const Translations = lngTranslations[this.constructor.name];\n        return(\n            <Grid\n                container\n                justify=\"center\"\n            >\n                <Grid\n                    item\n                    xs={12}\n                    sm={12}\n                    md={8}\n                    lg={8}\n                >\n                    <Grid\n                        container\n                        justify=\"flex-start\"\n                    >\n                        <h2 style={Styles.mainTitle}>\n                            {Translations.main_title_trans}\n                        </h2>\n                    </Grid>\n                </Grid>\n                <Grid\n                    item\n                    xs={12}\n                    sm={12}\n                    md={4}\n                    lg={4}\n                >\n                    <Grid\n                        container\n                        justify=\"flex-end\"\n                    >\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={Translations.dropdown_choose_language_trans}\n                            // onChange={\n\n                            // }\n                        >\n                            <MenuItem value=\"el\">{Translations.dropdown_choose_language_el_trans}</MenuItem>\n                            <MenuItem value=\"en\">{Translations.dropdown_choose_language_en_trans}</MenuItem>\n                            <MenuItem value=\"ka\">{Translations.dropdown_choose_language_ka_trans}</MenuItem>\n                        </Select>\n                        {/* <Dropdown\n                            size=\"sm\"\n                            onSelect={lngNew => {\n                                if (lngNew !== lng) {\n                                    if (lngNew === \"en\") {\n                                        updateAppState({\n                                            lng: lngNew,\n                                            lngTranslations: en\n                                        });\n                                    } else if (lngNew === \"ka\") {\n                                        updateAppState({\n                                            lng: lngNew,\n                                            lngTranslations: ka\n                                        });\n                                    } else {\n                                        updateAppState({\n                                            lng: \"el\",\n                                            lngTranslations: el\n                                        });\n                                    }\n                                }\n                            }}\n                        >\n                            <Dropdown.Toggle\n                                variant=\"secondary\"\n                                id=\"language_select\"\n                                ref={ref => this.lngSelectRef = ref}\n                            >\n                                {Translations.dropdown_choose_language_trans}\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                <Dropdown.Item\n                                    active={lng === \"el\"}\n                                    eventKey=\"el\"\n                                >\n                                    {Translations.dropdown_choose_language_el_trans}\n                                </Dropdown.Item>\n                                <Dropdown.Item\n                                    active={lng === \"en\"}\n                                    eventKey=\"en\"\n                                >\n                                    {Translations.dropdown_choose_language_en_trans}\n                                </Dropdown.Item>\n                                <Dropdown.Item\n                                    active={lng === \"ka\"}\n                                    eventKey=\"ka\"\n                                >\n                                    {Translations.dropdown_choose_language_ka_trans}\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown> */}\n                    </Grid>\n                </Grid>\n            </Grid>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}